
<section>
	<header>
	<h3>Create a new CommonSecrets file</h3>
	</header>

	<EditForm Model="@createNewCommonSecretsContainerData" OnValidSubmit="@HandlePasswordSubmit">
		<header>
			<h4>Primary password</h4>
		</header>
		
		<p>
			<label>Primary password:
				<InputText id="password" @bind-Value="createNewCommonSecretsContainerData.Password" />
			</label>
		</p>

		@if (visiblePassword)
		{

		}
		else
		{
			<p>
				<label>Repeat password:
					<InputText id="repeatpassword" @bind-Value="createNewCommonSecretsContainerData.RepeatPassword" />
				</label>
			</p>
		}

		<p>
			<label>Visible
				<InputCheckbox id="visiblePassword" @bind-Value="visiblePassword" />
			</label>      
		</p>

		<p>
			<label>Password entropy: @createNewCommonSecretsContainerData.PasswordEntropy</label>
			<label>Shannon entropy: @createNewCommonSecretsContainerData.ShannonEntropy</label>
		</p>

		<DataAnnotationsValidator />
		<ValidationSummary />
	</EditForm>

	<EditForm Model="@keyDerivationFunctionData">
		<header>
			<h4>Key Derivation Function (KDF)</h4>
		</header>
		<p>
			<label>Salt:
				<input type="text" value="@keyDerivationFunctionData.Salt" readonly>
			</label>
		</p>

		<p>
			<label>Iterations:
				<InputNumber @bind-Value="keyDerivationFunctionData.Iterations" />
			</label>
		</p>

		<p>
			<label>Identifier:
				<InputText @bind-Value="keyDerivationFunctionData.Identifier" />
			</label>
		</p>

		<DataAnnotationsValidator />
		<ValidationSummary />
	</EditForm>
	<p><button @onclick="OnCancelClickCallback">Cancel</button> <button @onclick="HandleCreate">Create</button></p>
</section>

@code {
	[Parameter]
	public EventCallback<MouseEventArgs> OnCancelClickCallback { get; set; }

	[Parameter]
	public EventCallback<KdfeAndPassword> OnCreateClickCallback { get; set; }

	private bool visiblePassword { get; set; } = false;

	private string UnsafePasswordWarning { get; set; } = "";

	private CreateNewCommonSecretsContainerData createNewCommonSecretsContainerData = new CreateNewCommonSecretsContainerData();

	private KeyDerivationFunctionData keyDerivationFunctionData = new KeyDerivationFunctionData();

	private void HandleCreate()
	{
		//OnCreateClickCallback.InvokeAsync(new KdfeAndPassword(keyDerivationFunctionData., createNewCommonSecretsContainerData.Password));
	}

	private void HandlePasswordSubmit()
	{
		
	}

	
}